#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { quick-tap-ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        win_undo {
            bindings = <&kp LC(Z)>;
            key-positions = <21 22>;
            timeout-ms = <60>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        win_copy {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
            timeout-ms = <60>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        win_paste {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
            timeout-ms = <60>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };
    };

    macros {
        my_email: my_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N7 &kp N3 &kp E &kp O &kp R &kp L &kp F &kp AT &kp N &kp A &kp V &kp E &kp R &kp DOT &kp C &kp O &kp M>;
            label = "MY_EMAIL";
        };
    };

    behaviors {
        new_mt: new_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_MT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
        };

        new_lt: new_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        right_hrm: right_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34 37 36 35 16 17 18 19>;
        };

        left_hrm: left_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37 32 33 34 11 12 13>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
                            &kp Q  &kp W                     &kp E                 &kp R                         &kp T              &kp Y             &kp U                  &kp I                  &kp O                      &kp P
                            &kp A  &left_hrm LEFT_CONTROL S  &left_hrm LEFT_GUI D  &left_hrm LEFT_ALT F          &kp G              &kp H             &right_hrm LEFT_ALT J  &right_hrm LEFT_GUI K  &right_hrm LEFT_CONTROL L  &right_hrm RIGHT_SHIFT SEMI
&kp LA(LC(LG(LEFT_SHIFT)))  &kp Z  &kp X                     &kp C                 &kp V                         &kp B              &kp N             &kp M                  &kp COMMA              &kp DOT                    &kp FSLH                     &kp APOS
                                                             &kp TAB               &new_mt LEFT_SHIFT BACKSPACE  &new_lt 1 ENTER    &new_lt 2 ESCAPE  &kp SPACE              &kp RIGHT_ALT
            >;
        };

        layer_1 {
            bindings = <
          &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR       &kp PERCENT    &kp CARET         &kp AMPERSAND   &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
          &kp N1            &kp N2             &kp N3          &kp N4           &kp N5         &kp N6            &kp N7          &kp N8     &kp N9                &kp N0
&kp CAPS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &none          &none             &kp UNDERSCORE  &kp MINUS  &kp KP_PLUS           &kp EQUAL              &none
                                               &none           &mo 4            &trans         &new_lt 3 ESCAPE  &trans          &trans
            >;
        };

        layer_2 {
            bindings = <
       &kp F9  &kp F10  &kp F11  &kp F12  &kp INSERT         &kp C_MUTE  &kp PAGE_UP   &kp PAGE_DOWN  &kp C_PLAY_PAUSE  &kp DELETE
       &kp F5  &kp F6   &kp F7   &kp F8   &kp HOME           &kp LEFT    &kp DOWN      &kp UP         &kp RIGHT         &kp C_BRI_UP
&none  &kp F1  &kp F2   &kp F3   &kp F4   &kp END            &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP   &kp C_NEXT        &kp C_BRI_DEC  &none
                        &trans   &trans   &new_lt 3 ENTER    &trans      &mo 4         &none
            >;
        };

        layer_3 {
            bindings = <
           &none  &none  &kp TILDE  &kp PIPE       &none     &bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
           &none  &none  &kp GRAVE  &kp BACKSLASH  &none     &none       &kp PRINTSCREEN  &none         &none         &none
&my_email  &none  &none  &none      &none          &none     &none       &none            &none         &none         &none         &none
                         &none      &none          &trans    &trans      &none            &none
            >;
        };

        layer_4 {
            bindings = <
       &none  &none  &none  &none   &bootloader    &bootloader  &none   &none  &none  &none
       &none  &none  &none  &none   &none          &none        &none   &none  &none  &none
&none  &none  &none  &none  &none   &none          &none        &none   &none  &none  &none  &none
                     &none  &trans  &trans         &trans       &trans  &none
            >;
        };
    };
};
